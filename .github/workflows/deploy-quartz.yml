name: Deploy Quartz Documentation Site

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Checkout Quartz
        uses: actions/checkout@v4
        with:
          repository: jackyzha0/quartz
          path: quartz

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Copy content to Quartz
        run: |
          # Remove default Quartz content
          rm -rf quartz/content/*

          # Copy our markdown files
          cp *.md quartz/content/

          # Copy index
          cp "00 - Индекс.md" quartz/content/index.md

      - name: Configure Quartz
        run: |
          cd quartz
          cat > quartz.config.ts << 'EOF'
          import { QuartzConfig } from "./quartz/cfg"
          import * as Plugin from "./quartz/plugins"

          const config: QuartzConfig = {
            configuration: {
              pageTitle: "📚 SEO Knowledge Base",
              pageTitleSuffix: " | SEO Docs",
              enableSPA: true,
              enablePopovers: true,
              analytics: { provider: "plausible" },
              locale: "ru-RU",
              baseUrl: "zif91.github.io/seo-docs",
              ignorePatterns: ["private", "templates", ".obsidian", "compass_artifact*"],
              defaultDateType: "modified",
              theme: {
                fontOrigin: "googleFonts",
                cdnCaching: true,
                typography: {
                  header: "Schibsted Grotesk",
                  body: "Source Sans Pro",
                  code: "IBM Plex Mono",
                },
                colors: {
                  lightMode: {
                    light: "#faf8f8",
                    lightgray: "#e5e5e5",
                    gray: "#b8b8b8",
                    darkgray: "#4e4e4e",
                    dark: "#2b2b2b",
                    secondary: "#284b63",
                    tertiary: "#84a59d",
                    highlight: "rgba(143, 159, 169, 0.15)",
                    textHighlight: "#fff23688",
                  },
                  darkMode: {
                    light: "#161618",
                    lightgray: "#393639",
                    gray: "#646464",
                    darkgray: "#d4d4d4",
                    dark: "#ebebec",
                    secondary: "#7b97aa",
                    tertiary: "#84a59d",
                    highlight: "rgba(143, 159, 169, 0.15)",
                    textHighlight: "#b3aa0288",
                  },
                },
              },
            },
            plugins: {
              transformers: [
                Plugin.FrontMatter(),
                Plugin.CreatedModifiedDate({ priority: ["frontmatter", "git", "filesystem"] }),
                Plugin.SyntaxHighlighting({ theme: { light: "github-light", dark: "github-dark" }, keepBackground: false }),
                Plugin.ObsidianFlavoredMarkdown({ enableInHtmlEmbed: false }),
                Plugin.GitHubFlavoredMarkdown(),
                Plugin.TableOfContents(),
                Plugin.CrawlLinks({ markdownLinkResolution: "shortest" }),
                Plugin.Description(),
                Plugin.Latex({ renderEngine: "katex" }),
              ],
              filters: [Plugin.RemoveDrafts()],
              emitters: [
                Plugin.AliasRedirects(),
                Plugin.ComponentResources(),
                Plugin.ContentPage(),
                Plugin.FolderPage(),
                Plugin.TagPage(),
                Plugin.ContentIndex({ enableSiteMap: true, enableRSS: true }),
                Plugin.Assets(),
                Plugin.Static(),
                Plugin.NotFoundPage(),
              ],
            },
          }

          export default config
          EOF

      - name: Install Dependencies
        run: |
          cd quartz
          npm ci

      - name: Build Quartz
        run: |
          cd quartz
          npx quartz build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./quartz/public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
